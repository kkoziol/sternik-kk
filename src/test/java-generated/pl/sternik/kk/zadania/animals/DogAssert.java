package pl.sternik.kk.zadania.animals;

/**
 * {@link Dog} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractDogAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class DogAssert extends AbstractDogAssert<DogAssert, Dog> {

  /**
   * Creates a new <code>{@link DogAssert}</code> to make assertions on actual Dog.
   * @param actual the Dog we want to make assertions on.
   */
  public DogAssert(Dog actual) {
    super(actual, DogAssert.class);
  }

  /**
   * An entry point for DogAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myDog)</code> and get specific assertion with code completion.
   * @param actual the Dog we want to make assertions on.
   * @return a new <code>{@link DogAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static DogAssert assertThat(Dog actual) {
    return new DogAssert(actual);
  }
}
